version: "3.4"

# DO NOT USE THIS IN PRODUCTION - it is for development only due to insecure
# settings and the use of "runserver" versus "gunicorn".
# See https://docs.jointakahe.org/en/latest/installation/ for more

x-takahe-args:
  &takahe-args
    build:
      args:
        TAKAHE_DATABASE_SERVER:
        TAKAHE_DEBUG: ${TAKAHE_DEBUG}
        TAKAHE_SECRET_KEY: ${TAKAHE_SECRET_KEY}
        TAKAHE_CSRF_HOSTS: ${TAKAHE_CSRF_HOSTS}
        TAKAHE_USE_PROXY_HEADERS: ${TAKAHE_USE_PROXY_HEADERS}
        TAKAHE_EMAIL_BACKEND: ${TAKAHE_EMAIL_BACKEND}
        TAKAHE_MEDIA_BACKEND: ${TAKAHE_MEDIA_BACKEND}
        TAKAHE_MAIN_DOMAIN: ${TAKAHE_MAIN_DOMAIN}
        TAKAHE_ENVIRONMENT: ${TAKAHE_ENVIRONMENT}
        TAKAHE_AUTO_ADMIN_EMAIL: ${TAKAHE_AUTO_ADMIN_EMAIL}

x-takahe-common:
  &takahe-common
    build:
      context: ..
      dockerfile: ./docker/Dockerfile

    image: takahe:latest
    environment:
      TAKAHE_DATABASE_SERVER: ${TAKAHE_DATABASE_SERVER}
      TAKAHE_DEBUG: ${TAKAHE_DEBUG}
      TAKAHE_SECRET_KEY: ${TAKAHE_SECRET_KEY}
      TAKAHE_CSRF_HOSTS: ${TAKAHE_CSRF_HOSTS}
      TAKAHE_USE_PROXY_HEADERS: ${TAKAHE_USE_PROXY_HEADERS}
      TAKAHE_EMAIL_BACKEND: ${TAKAHE_EMAIL_BACKEND}
      TAKAHE_MEDIA_BACKEND: ${TAKAHE_MEDIA_BACKEND}
      TAKAHE_MAIN_DOMAIN: ${TAKAHE_MAIN_DOMAIN}
      TAKAHE_ENVIRONMENT: ${TAKAHE_ENVIRONMENT}
      TAKAHE_AUTO_ADMIN_EMAIL: ${TAKAHE_AUTO_ADMIN_EMAIL}
      GUNICORN_EXTRA_CMD_ARGS: "--reload"
      GOOGLE_APPLICATION_CREDENTIALS: /run/secrets/google-application-credentials
    networks:
      - external_network
      - internal_network
    restart: on-failure
    depends_on:
      - db
    volumes:
      - ..:/takahe/

services:
  db:
    <<: *takahe-args
    image: docker.io/postgres:15-alpine
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - internal_network
    restart: always
    environment:
      POSTGRES_DB: ${TAKAHE_DATABASE_NAME}
      POSTGRES_USER: ${TAKAHE_DATABASE_USER}
      POSTGRES_PASSWORD: ${TAKAHE_DATABASE_PASSWORD}
    ports:
      - "5433:5432"

  web:
    <<:
      - *takahe-args
      - *takahe-common
    healthcheck:
      test: ["CMD", "nc", "-z", "-v", "localhost", "8000"]
      interval: 20s
      timeout: 60s
      start_period: 15s
    ports:
      - "8000:8000"
    secrets:
      - google-application-credentials
    depends_on:
      setup:
        condition: service_completed_successfully

  stator:
    <<:
      - *takahe-args
      - *takahe-common
    command: ["/takahe/manage.py", "runstator"]
    secrets:
      - google-application-credentials
    depends_on:
      setup:
        condition: service_completed_successfully

  setup:
    <<:
      - *takahe-args
      - *takahe-common
    restart: "no"
    secrets:
      - google-application-credentials
    command: >
      bash -c "/takahe/check_google_auth.py && /takahe/manage.py migrate && /takahe/manage.py collectstatic --noinput"

secrets:
  google-application-credentials:
    file: ./secrets/GOOGLE_APPLICATION_CREDENTIALS

networks:
  internal_network:
  external_network:

volumes:
  dbdata:
